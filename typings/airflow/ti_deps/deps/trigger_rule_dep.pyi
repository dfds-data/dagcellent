"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterator
from typing import TYPE_CHECKING, NamedTuple

from airflow.models.taskinstance import TaskInstance
from airflow.ti_deps.deps.base_ti_dep import BaseTIDep

if TYPE_CHECKING: ...

class _UpstreamTIStates(NamedTuple):
    """
    States of the upstream tis for a specific ti.

    This is used to determine whether the specific ti can run in this iteration.
    """

    success: int
    skipped: int
    failed: int
    upstream_failed: int
    removed: int
    done: int
    success_setup: int
    skipped_setup: int
    @classmethod
    def calculate(cls, finished_upstreams: Iterator[TaskInstance]) -> _UpstreamTIStates:
        """
        Calculate states for a task instance.

        ``counter`` is inclusive of ``setup_counter`` -- e.g. if there are 2 skipped upstreams, one
        of which is a setup, then counter will show 2 skipped and setup counter will show 1.

        :param ti: the ti that we want to calculate deps for
        :param finished_tis: all the finished tasks of the dag_run
        """
        ...

class TriggerRuleDep(BaseTIDep):
    """Determines if a task's upstream tasks are in a state that allows a given task instance to run."""

    NAME = ...
    IGNORABLE = ...
    IS_TASK_DEP = ...
