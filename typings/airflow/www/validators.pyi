"""
This type stub file was generated by pyright.
"""

from wtforms.validators import EqualTo

class GreaterEqualThan(EqualTo):
    """
    Compares the values of two fields.

    :param fieldname:
        The name of the other field to compare to.
    :param message:
        Error message to raise in case of a validation error. Can be
        interpolated with `%(other_label)s` and `%(other_name)s` to provide a
        more helpful error.
    """

    def __call__(self, form, field):  # -> None:
        ...

class ValidJson:
    """
    Validates data is valid JSON.

    :param message:
        Error message to raise in case of a validation error.
    """

    def __init__(self, message=...) -> None: ...
    def __call__(self, form, field):  # -> None:
        ...

class ValidKey:
    """
    Validates values that will be used as keys.

    :param max_length:
        The maximum allowed length of the given key
    """

    def __init__(self, max_length=...) -> None: ...
    def __call__(self, form, field):  # -> None:
        ...

class ReadOnly:
    """
    Adds readonly flag to a field.

    When using this you normally will need to override the form's populate_obj method,
    so field.populate_obj is not called for read-only fields.
    """

    def __call__(self, form, field):  # -> None:
        ...

class ValidConnID:
    """
    Validates the connection ID adheres to the desired format.

    :param max_length:
        The maximum allowed length of the given Connection ID.
    """

    message = ...
    def __init__(self, max_length: int = ...) -> None: ...
    def __call__(self, form, field):  # -> None:
        ...
