"""
This type stub file was generated by pyright.
"""

import enum
from collections.abc import Collection
from typing import TYPE_CHECKING, Any

from airflow.models.base import TaskInstanceDependencies
from airflow.models.taskinstance import TaskInstance
from airflow.serialization.pydantic.taskinstance import TaskInstancePydantic

"""Table to store information about mapped task instances (AIP-42)."""
if TYPE_CHECKING: ...

class TaskMapVariant(enum.Enum):
    """
    Task map variant.

    Possible values are **dict** (for a key-value mapping) and **list** (for an
    ordered value sequence).
    """

    DICT = ...
    LIST = ...

class TaskMap(TaskInstanceDependencies):
    """
    Model to track dynamic task-mapping information.

    This is currently only populated by an upstream TaskInstance pushing an
    XCom that's pulled by a downstream for mapping purposes.
    """

    __tablename__ = ...
    dag_id = ...
    task_id = ...
    run_id = ...
    map_index = ...
    length = ...
    keys = ...
    __table_args__ = ...
    def __init__(
        self,
        dag_id: str,
        task_id: str,
        run_id: str,
        map_index: int,
        length: int,
        keys: list[Any] | None,
    ) -> None: ...
    @classmethod
    def from_task_instance_xcom(
        cls, ti: TaskInstance | TaskInstancePydantic, value: Collection
    ) -> TaskMap: ...
    @property
    def variant(self) -> TaskMapVariant: ...
