"""
This type stub file was generated by pyright.
"""

from airflow.typing_compat import Protocol

log = ...

class FernetProtocol(Protocol):
    """This class is only used for TypeChecking (for IDEs, mypy, etc)."""

    def decrypt(self, b):  # -> None:
        """Decrypt with Fernet."""
        ...

    def encrypt(self, b):  # -> None:
        """Encrypt with Fernet."""
        ...

class NullFernet:
    """
    A "Null" encryptor class that doesn't encrypt or decrypt but that presents a similar interface to Fernet.

    The purpose of this is to make the rest of the code not have to know the
    difference, and to only display the message once, not 20 times when
    `airflow db migrate` is run.
    """

    is_encrypted = ...
    def decrypt(self, b):
        """Decrypt with Fernet."""
        ...

    def encrypt(self, b):
        """Encrypt with Fernet."""
        ...

_fernet: FernetProtocol | None = ...

def get_fernet():  # -> FernetProtocol | NullFernet | None:
    """
    Deferred load of Fernet key.

    This function could fail either because Cryptography is not installed
    or because the Fernet key is invalid.

    :return: Fernet object
    :raises: airflow.exceptions.AirflowException if there's a problem trying to load Fernet
    """
    ...
