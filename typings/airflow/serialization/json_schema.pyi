"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable
from typing import TYPE_CHECKING

import jsonschema
from airflow.typing_compat import Protocol

"""jsonschema for validating serialized DAG and operator."""
if TYPE_CHECKING: ...

class Validator(Protocol):
    """
    This class is only used for type checking.

    A workaround for IDEs, mypy, etc. due to the way ``Draft7Validator`` is created.
    They are created or do not inherit from proper classes.
    Hence, you can not have ``type: Draft7Validator``.
    """

    def is_valid(self, instance) -> bool:
        """Check if the instance is valid under the current schema."""
        ...

    def validate(self, instance) -> None:
        """Check if the instance is valid under the current schema, raising validation error if not."""
        ...

    def iter_errors(self, instance) -> Iterable[jsonschema.exceptions.ValidationError]:
        """Lazily yield each of the validation errors in the given instance."""
        ...

def load_dag_schema_dict() -> dict:
    """Load & return Json Schema for DAG as Python dict."""
    ...

def load_dag_schema() -> Validator:
    """Load & Validate Json Schema for DAG."""
    ...
