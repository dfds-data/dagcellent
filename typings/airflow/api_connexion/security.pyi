"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable, Sequence
from typing import TYPE_CHECKING, TypeVar

from airflow.auth.managers.base_auth_manager import ResourceMethod
from airflow.auth.managers.models.resource_details import AccessView, DagAccessEntity

if TYPE_CHECKING: ...
T = TypeVar("T", bound=Callable)

def check_authentication() -> None:
    """Check that the request has valid authorization information."""
    ...

def requires_access(
    permissions: Sequence[tuple[str, str]] | None = ...,
) -> Callable[[T], T]:
    """
    Check current user's permissions against required permissions.

    Deprecated. Do not use this decorator, use one of the decorator `has_access_*` defined in
    airflow/api_connexion/security.py instead.
    This decorator will only work with FAB authentication and not with other auth providers.

    This decorator might be used in user plugins, do not remove it.
    """
    ...

def requires_access_configuration(method: ResourceMethod) -> Callable[[T], T]: ...
def requires_access_connection(method: ResourceMethod) -> Callable[[T], T]: ...
def requires_access_dag(
    method: ResourceMethod, access_entity: DagAccessEntity | None = ...
) -> Callable[[T], T]: ...
def requires_access_dataset(method: ResourceMethod) -> Callable[[T], T]: ...
def requires_access_pool(method: ResourceMethod) -> Callable[[T], T]: ...
def requires_access_variable(method: ResourceMethod) -> Callable[[T], T]: ...
def requires_access_view(access_view: AccessView) -> Callable[[T], T]: ...
def requires_access_custom_view(
    method: ResourceMethod, resource_name: str
) -> Callable[[T], T]: ...
def get_readable_dags() -> set[str]: ...
