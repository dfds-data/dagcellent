"""
This type stub file was generated by pyright.
"""

MB = ...
GB = ...
TB = ...
PB = ...
EB = ...

class Resource:
    """
    Represents a resource requirement in an execution environment for an operator.

    :param name: Name of the resource
    :param units_str: The string representing the units of a resource (e.g. MB for a CPU
        resource) to be used for display purposes
    :param qty: The number of units of the specified resource that are required for
        execution of the operator.
    """

    def __init__(self, name, units_str, qty) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __repr__(self):  # -> str:
        ...
    @property
    def name(self):  # -> Any:
        """Name of the resource."""
        ...

    @property
    def units_str(self):  # -> Any:
        """The string representing the units of a resource."""
        ...

    @property
    def qty(self):  # -> Any:
        """The number of units of the specified resource that are required for execution of the operator."""
        ...

    def to_dict(self):  # -> dict[str, Any]:
        ...

class CpuResource(Resource):
    """Represents a CPU requirement in an execution environment for an operator."""

    def __init__(self, qty) -> None: ...

class RamResource(Resource):
    """Represents a RAM requirement in an execution environment for an operator."""

    def __init__(self, qty) -> None: ...

class DiskResource(Resource):
    """Represents a disk requirement in an execution environment for an operator."""

    def __init__(self, qty) -> None: ...

class GpuResource(Resource):
    """Represents a GPU requirement in an execution environment for an operator."""

    def __init__(self, qty) -> None: ...

class Resources:
    """
    The resources required by an operator.

    Resources that are not specified will use the default values from the airflow config.

    :param cpus: The number of cpu cores that are required
    :param ram: The amount of RAM required
    :param disk: The amount of disk space required
    :param gpus: The number of gpu units that are required
    """

    def __init__(self, cpus=..., ram=..., disk=..., gpus=...) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __repr__(self):  # -> str:
        ...
    def to_dict(self):  # -> dict[str, dict[str, Any]]:
        ...
    @classmethod
    def from_dict(cls, resources_dict: dict):  # -> Self:
        """Create resources from resources dict."""
        ...
