"""
This type stub file was generated by pyright.
"""

import typing

from airflow.models.operator import Operator
from airflow.utils.context import Context

if typing.TYPE_CHECKING: ...

class MultiprocessingStartMethodMixin:
    """Convenience class to add support for different types of multiprocessing."""

    ...

class ResolveMixin:
    """A runtime-resolved value."""

    def iter_references(self) -> typing.Iterable[tuple[Operator, str]]:
        """
        Find underlying XCom references this contains.

        This is used by the DAG parser to recursively find task dependencies.

        :meta private:
        """
        ...

    def resolve(self, context: Context, *, include_xcom: bool = ...) -> typing.Any:
        """
        Resolve this value for runtime.

        :meta private:
        """
        ...
