"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable
from typing import TypeVar

T = TypeVar("T", bound=Callable)

def apply_defaults(func: T) -> T:
    """
    Use apply_default decorator for the `default_args` feature to work properly; deprecated.

    In previous versions, all subclasses of BaseOperator must use apply_default decorator for the"
    `default_args` feature to work properly.

    In current version, it is optional. The decorator is applied automatically using the metaclass.
    """
    ...

def remove_task_decorator(python_source: str, task_decorator_name: str) -> str:
    """
    Remove @task or similar decorators as well as @setup and @teardown.

    :param python_source: The python source code
    :param task_decorator_name: the decorator name

    TODO: Python 3.9+: Rewrite this to use ast.parse and ast.unparse
    """
    ...

class _autostacklevel_warn:
    def __init__(self) -> None: ...
    def __getattr__(self, name):  # -> Any:
        ...
    def __dir__(self):  # -> list[str]:
        ...
    def warn(self, message, category=..., stacklevel=..., source=...):  # -> None:
        ...

def fixup_decorator_warning_stack(func):  # -> None:
    ...
