"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING, Any

from airflow.models.connection import Connection
from airflow.secrets.base_secrets import BaseSecretsBackend
from airflow.utils.log.logging_mixin import LoggingMixin

"""Objects relating to retrieving connections and variables from local file."""
log = ...
if TYPE_CHECKING: ...

def get_connection_parameter_names() -> set[str]:
    """Return :class:`airflow.models.connection.Connection` constructor parameters."""
    ...

FILE_PARSERS = ...

def load_variables(file_path: str) -> dict[str, str]:
    """
    Load variables from a text file.

    ``JSON``, `YAML` and ``.env`` files are supported.

    :param file_path: The location of the file that will be processed.
    """
    ...

def load_connections(file_path) -> dict[str, list[Any]]:
    """Use `airflow.secrets.local_filesystem.load_connections_dict`, this is deprecated."""
    ...

def load_connections_dict(file_path: str) -> dict[str, Any]:
    """
    Load connection from text file.

    ``JSON``, `YAML` and ``.env`` files are supported.

    :return: A dictionary where the key contains a connection ID and the value contains the connection.
    """
    ...

class LocalFilesystemBackend(BaseSecretsBackend, LoggingMixin):
    """
    Retrieves Connection objects and Variables from local files.

    ``JSON``, `YAML` and ``.env`` files are supported.

    :param variables_file_path: File location with variables data.
    :param connections_file_path: File location with connection data.
    """

    def __init__(
        self,
        variables_file_path: str | None = ...,
        connections_file_path: str | None = ...,
    ) -> None: ...
    def get_connection(self, conn_id: str) -> Connection | None: ...
    def get_connections(self, conn_id: str) -> list[Any]: ...
    def get_variable(self, key: str) -> str | None: ...
