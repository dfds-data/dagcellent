"""
This type stub file was generated by pyright.
"""

import datetime
from typing import TYPE_CHECKING

import jinja2.nativetypes
import jinja2.sandbox

if TYPE_CHECKING: ...

class _AirflowEnvironmentMixin:
    def __init__(self, **kwargs) -> None: ...
    def is_safe_attribute(self, obj, attr, value):  # -> bool:
        """
        Allow access to ``_`` prefix vars (but not ``__``).

        Unlike the stock SandboxedEnvironment, we allow access to "private" attributes (ones starting with
        ``_``) whilst still blocking internal or truly private attributes (``__`` prefixed ones).
        """
        ...

class NativeEnvironment(_AirflowEnvironmentMixin, jinja2.nativetypes.NativeEnvironment):
    """NativeEnvironment for Airflow task templates."""

    ...

class SandboxedEnvironment(
    _AirflowEnvironmentMixin, jinja2.sandbox.SandboxedEnvironment
):
    """SandboxedEnvironment for Airflow task templates."""

    ...

def ds_filter(value: datetime.date | datetime.time | None) -> str | None:
    """Date filter."""
    ...

def ds_nodash_filter(value: datetime.date | datetime.time | None) -> str | None:
    """Date filter without dashes."""
    ...

def ts_filter(value: datetime.date | datetime.time | None) -> str | None:
    """Timestamp filter."""
    ...

def ts_nodash_filter(value: datetime.date | datetime.time | None) -> str | None:
    """Timestamp filter without dashes."""
    ...

def ts_nodash_with_tz_filter(value: datetime.date | datetime.time | None) -> str | None:
    """Timestamp filter with timezone."""
    ...

FILTERS = ...
