"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING

from airflow.metrics.protocols import DeltaType, TimerProtocol
from airflow.metrics.validators import ListValidator, validate_stat
from datadog import DogStatsd

if TYPE_CHECKING: ...
log = ...

class SafeDogStatsdLogger:
    """DogStatsd Logger."""

    def __init__(
        self,
        dogstatsd_client: DogStatsd,
        metrics_validator: ListValidator = ...,
        metrics_tags: bool = ...,
        metric_tags_validator: ListValidator = ...,
    ) -> None: ...
    @validate_stat
    def incr(
        self,
        stat: str,
        count: int = ...,
        rate: float = ...,
        *,
        tags: dict[str, str] | None = ...,
    ) -> None:
        """Increment stat."""
        ...

    @validate_stat
    def decr(
        self,
        stat: str,
        count: int = ...,
        rate: float = ...,
        *,
        tags: dict[str, str] | None = ...,
    ) -> None:
        """Decrement stat."""
        ...

    @validate_stat
    def gauge(
        self,
        stat: str,
        value: int | float,
        rate: float = ...,
        delta: bool = ...,
        *,
        tags: dict[str, str] | None = ...,
    ) -> None:
        """Gauge stat."""
        ...

    @validate_stat
    def timing(
        self, stat: str, dt: DeltaType, *, tags: dict[str, str] | None = ...
    ) -> None:
        """Stats timing."""
        ...

    @validate_stat
    def timer(
        self, stat: str | None = ..., tags: dict[str, str] | None = ..., **kwargs
    ) -> TimerProtocol:
        """Timer metric that can be cancelled."""
        ...

def get_dogstatsd_logger(cls) -> SafeDogStatsdLogger:
    """Get DataDog StatsD logger."""
    ...
