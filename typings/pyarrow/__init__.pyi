"""
This type stub file was generated by pyright.
"""

"""
PyArrow is the python implementation of Apache Arrow.

Apache Arrow is a cross-language development platform for in-memory data.
It specifies a standardized language-independent columnar memory format for
flat and hierarchical data, organized for efficient analytic operations on
modern hardware. It also provides computational libraries and zero-copy
streaming messaging and interprocess communication.

For more information see the official page at https://arrow.apache.org
"""
_gc_enabled = ...
if _gc_enabled: ...

def show_versions():  # -> None:
    """
    Print various version information, to help with error reporting.
    """
    ...

def show_info():  # -> None:
    """
    Print detailed version and platform information, for error reporting
    """
    ...

def get_include():  # -> str:
    """
    Return absolute path to directory containing Arrow C++ include
    headers. Similar to numpy.get_include
    """
    ...

def get_libraries():  # -> list[str]:
    """
    Return list of library names to include in the `libraries` argument for C
    or Cython extensions using pyarrow
    """
    ...

def create_library_symlinks():  # -> None:
    """
    With Linux and macOS wheels, the bundled shared libraries have an embedded
    ABI version like libarrow.so.17 or libarrow.17.dylib and so linking to them
    with -larrow won't work unless we create symlinks at locations like
    site-packages/pyarrow/libarrow.so. This unfortunate workaround addresses
    prior problems we had with shipping two copies of the shared libraries to
    permit third party projects like turbodbc to build their C++ extensions
    against the pyarrow wheels.

    This function must only be invoked once and only when the shared libraries
    are bundled with the Python package, which should only apply to wheel-based
    installs. It requires write access to the site-packages/pyarrow directory
    and so depending on your system may need to be run with root.
    """
    ...

def get_library_dirs():  # -> list[str]:
    """
    Return lists of directories likely to contain Arrow C++ libraries for
    linking C or Cython extensions using pyarrow
    """
    ...
